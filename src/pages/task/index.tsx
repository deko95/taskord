import { type FormEvent, useState } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../../utils/api";

const Home: NextPage = () => {
  const [task, setTask] = useState<string>("");

  const createTask = api.tasks.createTask.useMutation();

  const router = useRouter();

  const handleSubmitTask = (e: FormEvent) => {
    e.preventDefault();
    console.log("submitting task");
    createTask
      .mutateAsync({ title: task })
      .then(() => {
        void router.push("/saved");
      })
      .catch((err) => {
        console.error(err);
      });
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center gap-20 bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <header>
          <Link href={"/saved"}>
            <span
              className="rounded-full bg-white/10 px-10 py-3 font-semibold
            text-white no-underline transition hover:bg-white/20"
            >
              Saved Tasks
            </span>
          </Link>
        </header>

        <form className="flex gap-5" onSubmit={handleSubmitTask}>
          <input
            required
            className="rounded-full bg-white/10 px-10 py-3 font-semibold
            text-white no-underline transition hover:bg-white/20"
            type="text"
            placeholder="Task"
            value={task}
            onChange={(e) => setTask(e.target.value)}
          />

          <button
            className="rounded-full bg-white/10 px-10 py-3 font-semibold
            text-white no-underline transition hover:bg-white/20"
            type="submit"
          >
            Submit
          </button>
        </form>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
